#!/usr/bin/env bash

PROJECT='github-markdown-child-pages'
EXT='.md'									# Markdown files
unwanted=" \[$( whoami )\] "				# " [username] "

# -----------------------------------------------------------------------------
# Read into an array a tree listing of all the $EXT files below $1.
# -----------------------------------------------------------------------------
IFS=$'\n' read -d '' -r -a tree \
	< <( tree -ufF -I images -P "*$EXT" --prune -n --charset=ascii "${1:-.}" )

numBranches="$((${#tree[@]}-1))"			# the last array element
unset "tree[$numBranches]"					# remove `tree` summary line

echo "<!-- ${PROJECT}-start -->"			# an easy-to-find start marker
echo "<code>"								# monospace to preserve tree shape
for branch in "${tree[@]}"					# for each line of output left
do
	# -------------------------------------------------------------------------
	# Output from tree will look something like:
	#
	# (ASCII tree branches) [username] /path/to/file/or/directory
	#
	# so we'll preserve the branch graphics and work on the filepath and then
	# put the parts together.
	# -------------------------------------------------------------------------
	branch="${branch//\`/\\}"				#
	branch="${branch//$unwanted/}"			# remove "[username]" from each line
 	treepath="${branch%%-- *}"				# grab left section including `-- `
 	filepath="${branch##*-- }"				# grab right section after `-- `

	treepath="${treepath// /&nbsp;}"
	if [ "${filepath:(-${#EXT})}" == "$EXT" ]; then
		# ---------------------------------------------------------------------
		# If $filepath ends with the specified extension ($EXT) then grab the
		# first line of the file specified to use as a human-readable link part.
		# ---------------------------------------------------------------------
		read -r firstline<"$filepath"
		doctitle="${firstline#* }"
		branch="$treepath [$doctitle]($filepath)"
	else
		# ---------------------------------------------------------------------
		# Otherwise this line must be a directory element. Grab the leaf name.
		#
		# Special case: if you pass in '.' the first line will become '. .' :-/
		# ---------------------------------------------------------------------
		if [ "$filepath" == '.' ]; then
			leafname=''
		else
			x="${filepath%%/}" # remove trailing slash
			leafname="${x##*/}"	# leaf name
			branch="$treepath $leafname"
		fi
	fi

	echo "$branch<br>"
done
echo "</code>"								# monospace to preserve tree shape
echo "<small><i>Generated by <a href=\"https://github.com/mickeys/${PROJECT}\">${PROJECT}</a></i>.</small>"

echo "<!-- ${PROJECT}-end -->"					# an easy-to-find start marker